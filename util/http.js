//contains functions to send http request
import axios from "axios";

const BACKEND_URL =
  "https://react-native-course-b49d6-default-rtdb.asia-southeast1.firebasedatabase.app";

//Function to send data - Single object content
export async function storeExpense(expenseData) {
  //create new data use post request - contains ("url/nameOfNode.json", dataToSend)
  const response = await axios.post(
    BACKEND_URL + "/expenses.json",
    expenseData
  );
  //response.data.name is the unique id generated by Firebase
  const id = response.data.name;
  return id;
}

//Function to send data - Array content
export function storeExpenseArray(expenseData) {
  //create new data use post request - contains ("url/nameOfNode.json", dataToSend)
  axios.post(BACKEND_URL + "/expenses.json", [expenseData, expenseData]);
}

//Function to send data -  Multiple object content
export function storeExpenseMultiple(expenseData) {
  //create new data use post request - contains ("url/nameOfNode.json", dataToSend)
  axios.post(BACKEND_URL + "/expenses.json", {
    key1: expenseData,
    key2: expenseData,
  });
}

//Function to fetch data
export async function fetchExpenses() {
  //fetch data use get request
  const response = await axios.get(BACKEND_URL + "/expenses.json");

  //empty array to store the object from firebase
  const expense = [];

  //to see the contents of response data
  console.log("Contents of response.data: ", response.data);

  //loop to push the newly object into the array
  //for each key(unique id from db)
  for (const key in response.data) {
    const expenseObj = {
      id: key,
      amount: response.data[key].amount,
      date: new Date(response.data[key].date),
      description: response.data[key].description,
    };
    console.log("expenseObj: ", expenseObj);
    expense.push(expenseObj);
  }

  //function will return expense object that is newly created
  return expense;
}

//Function to update data - accepts target id and the content to change
export async function updateExpense(id, expenseData) {
  //update data use put method
  const response = await axios.put(
    BACKEND_URL + `/expenses/${id}.json`,
    expenseData
  );
  return response;
}

//Function to delete data - accepts target id
export async function deleteExpense(id) {
  //delete data use delete method
  const response = await axios.delete(BACKEND_URL + `/expenses/${id}.json`);
  return response;
}
